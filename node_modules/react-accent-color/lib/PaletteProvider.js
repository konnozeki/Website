'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createPalette = require('./createPalette');

var _createPalette2 = _interopRequireDefault(_createPalette);

var _mapExcept = require('./mapExcept');

var _mapExcept2 = _interopRequireDefault(_mapExcept);

var _memoize = require('./memoize');

var _memoize2 = _interopRequireDefault(_memoize);

var _Subject = require('./Subject');

var _Subject2 = _interopRequireDefault(_Subject);

var _withPalette = require('./withPalette');

var _withPalette2 = _interopRequireDefault(_withPalette);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Based on https://docs.microsoft.com/en-us/windows/uwp/style/color#color-palette-building-blocks

var Provider = function (_React$Component) {
  _inherits(Provider, _React$Component);

  function Provider(props, context) {
    _classCallCheck(this, Provider);

    var _this = _possibleConstructorReturn(this, (Provider.__proto__ || Object.getPrototypeOf(Provider)).call(this, props, context));

    _this.createAndMemoizePalette = (0, _memoize2.default)(_createPalette2.default);

    _this.state = {
      palette: new _Subject2.default(_this.createSubjectValue(props))
    };
    return _this;
  }

  _createClass(Provider, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.state.palette.next(this.createSubjectValue(nextProps));
    }
  }, {
    key: 'createSubjectValue',
    value: function createSubjectValue(props) {
      return _extends({
        palette: this.createAndMemoizePalette(props.accent, props.theme)
      }, (0, _mapExcept2.default)(props, ['children']));
    }
  }, {
    key: 'getChildContext',
    value: function getChildContext() {
      return this.state;
    }
  }, {
    key: 'render',
    value: function render() {
      return this.props.children;
    }
  }]);

  return Provider;
}(_react2.default.Component);

Provider.propTypes = {
  accent: _propTypes2.default.string,
  theme: _propTypes2.default.oneOf(['dark', 'light'])
};

Provider.childContextTypes = {
  palette: _propTypes2.default.instanceOf(_Subject2.default)
};

exports.default = (0, _withPalette2.default)(function (paletteProps, ownProps) {
  return _extends({}, paletteProps, ownProps);
})(Provider);
//# sourceMappingURL=PaletteProvider.js.map