{"version":3,"sources":["../src/mapExcept.test.js"],"names":["test","map","abc","def","xyz","actual","expect","toHaveProperty","toBe","Object","keys"],"mappings":";;AAAA;;;;;;AAEAA,KAAK,+BAAL,EAAsC,YAAM;AAC1C,MAAMC,MAAM,EAAEC,KAAK,GAAP,EAAYC,KAAK,GAAjB,EAAsBC,KAAK,GAA3B,EAAZ;AACA,MAAMC,SAAS,yBAAUJ,GAAV,EAAe,CAAC,KAAD,CAAf,CAAf;;AAEAK,SAAOD,MAAP,EAAeE,cAAf,CAA8B,KAA9B,EAAqC,GAArC;AACAD,SAAO,SAASD,MAAhB,EAAwBG,IAAxB,CAA6B,KAA7B;AACAF,SAAOD,MAAP,EAAeE,cAAf,CAA8B,KAA9B,EAAqC,GAArC;AACAD,SAAOG,OAAOC,IAAP,CAAYL,MAAZ,CAAP,EAA4BE,cAA5B,CAA2C,QAA3C,EAAqD,CAArD;AACD,CARD;;AAUAP,KAAK,oCAAL,EAA2C,YAAM;AAC/C,MAAMC,MAAM,EAAEC,KAAK,GAAP,EAAYC,KAAK,GAAjB,EAAsBC,KAAK,GAA3B,EAAZ;AACA,MAAMC,SAAS,yBAAUJ,GAAV,EAAe,CAAC,KAAD,CAAf,CAAf;;AAEAK,SAAOD,MAAP,EAAeE,cAAf,CAA8B,KAA9B,EAAqC,GAArC;AACAD,SAAOD,MAAP,EAAeE,cAAf,CAA8B,KAA9B,EAAqC,GAArC;AACAD,SAAOD,MAAP,EAAeE,cAAf,CAA8B,KAA9B,EAAqC,GAArC;AACAD,SAAOG,OAAOC,IAAP,CAAYL,MAAZ,CAAP,EAA4BE,cAA5B,CAA2C,QAA3C,EAAqD,CAArD;AACD,CARD","file":"mapExcept.test.js","sourcesContent":["import mapExcept from './mapExcept';\r\n\r\ntest('mapExcept should exclude keys', () => {\r\n  const map = { abc: 123, def: 456, xyz: 789 };\r\n  const actual = mapExcept(map, ['def']);\r\n\r\n  expect(actual).toHaveProperty('abc', 123);\r\n  expect('def' in actual).toBe(false);\r\n  expect(actual).toHaveProperty('xyz', 789);\r\n  expect(Object.keys(actual)).toHaveProperty('length', 2);\r\n});\r\n\r\ntest('mapExcept should skip missing keys', () => {\r\n  const map = { abc: 123, def: 456, xyz: 789 };\r\n  const actual = mapExcept(map, ['ghi']);\r\n\r\n  expect(actual).toHaveProperty('abc', 123);\r\n  expect(actual).toHaveProperty('def', 456);\r\n  expect(actual).toHaveProperty('xyz', 789);\r\n  expect(Object.keys(actual)).toHaveProperty('length', 3);\r\n});\r\n"]}