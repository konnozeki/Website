'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createPalette;

var _color = require('color');

var _color2 = _interopRequireDefault(_color);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isDark(color) {
  return color.green() * 5 + color.red() * 2 + color.blue() <= 8 * 128;
}

function createPalette(accent, theme) {
  var accentColor = (0, _color2.default)(accent);
  var light = theme === 'light';

  var palette = {
    accent: accent,

    accentDark1: accentColor.darken(.2).string(),
    accentDark2: accentColor.darken(.4).string(),
    accentDark3: accentColor.darken(.6).string(),
    accentLight1: accentColor.lighten(.2).string(),
    accentLight2: accentColor.lighten(.4).string(),
    accentLight3: accentColor.lighten(.6).string(),
    background: light ? '#FFF' : '#000',
    foreground: light ? '#000' : '#FFF',

    baseLow: light ? 'rgba(0, 0, 0, .2)' : 'rgba(255, 255, 255, .2)',
    baseMediumLow: light ? 'rgba(0, 0, 0, .4)' : 'rgba(255, 255, 255, .4)',
    baseMedium: light ? 'rgba(0, 0, 0, .6)' : 'rgba(255, 255, 255, .6)',
    baseMediumHigh: light ? 'rgba(0, 0, 0, .8)' : 'rgba(255, 255, 255, .8)',
    baseHigh: light ? '#000' : '#FFF',

    altLow: light ? 'rgba(255, 255, 255, .2)' : 'rgba(0, 0, 0, .2)',
    altMediumLow: light ? 'rgba(255, 255, 255, .4)' : 'rgba(0, 0, 0, .4)',
    altMedium: light ? 'rgba(255, 255, 255, .6)' : 'rgba(0, 0, 0, .6)',
    altMediumHigh: light ? 'rgba(255, 255, 255, .8)' : 'rgba(0, 0, 0, .8)',
    altHigh: light ? '#FFF' : '#000',

    listLow: light ? 'rgba(0, 0, 0, .1)' : 'rgba(255, 255, 255, .1)',
    listMedium: light ? 'rgba(0, 0, 0, .2)' : 'rgba(255, 255, 255, .2)',
    listAccentLow: accentColor.fade(.4),
    listAccentMedium: accentColor.fade(.6),
    listAccentHigh: accentColor.fade(.7),

    chromeLow: light ? '#F2F2F2' : '#171717',
    chromeMediumLow: light ? '#F2F2F2' : '#2B2B2B',
    chromeMedium: light ? '#E6E6E6' : '#1F1F1F',
    chromeHigh: light ? '#CCC' : '#767676',
    chromeAltLow: light ? '#171717' : '#F2F2F2',
    chromeDisabledLow: light ? '#7A7A7A' : '#858585',
    chromeDisabledHigh: light ? '#CCC' : '#333',
    chromeBlackLow: 'rgba(0, 0, 0, .2)',
    chromeBlackMediumLow: 'rgba(0, 0, 0, .4)',
    chromeBlackMedium: 'rgba(0, 0, 0, .8)',
    chromeBlackHigh: '#000',
    chromeWhite: '#FFF'
  };

  palette.textOn = Object.keys(palette).reduce(function (textPalettes, name) {
    textPalettes[name] = isDark((0, _color2.default)(palette[name])) ? 'white' : 'black';

    return textPalettes;
  }, {});

  palette.primaryText = palette.baseHigh;
  palette.secondaryText = palette.baseMedium;
  palette.disabledUI = palette.baseMediumLow;

  return palette;
}
//# sourceMappingURL=createPalette.js.map