{"version":3,"sources":["../src/withPalette.js"],"names":["withPalette","DEFAULT_ACCENT","DEFAULT_THEME","propsEqual","x","y","keys","Object","every","key","propsFactory","WithPalette","props","context","contextValue","palette","getValue","createAndMemoizePalette","state","createState","subscribePalette","nextProps","nextContext","shouldUpdate","setState","unsubscribe","subscribe","accent","theme","propsChanged","nextHoistedProps","getHoistedProps","hoistedProps","cssProps","Component","contextTypes","instanceOf","displayName","WrappedComponent","name","propTypes","string","oneOf"],"mappings":"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","file":"withPalette.js","sourcesContent":["import PropTypes     from 'prop-types';\r\nimport React         from 'react';\r\n\r\nimport arrayEqual      from './arrayEqual';\r\nimport createPalette   from './createPalette';\r\nimport mapEqual        from './mapEqual';\r\nimport mapExcept       from './mapExcept';\r\nimport memoize         from './memoize';\r\nimport PaletteProvider from './PaletteProvider';\r\nimport Subject         from './Subject';\r\n\r\nconst DEFAULT_ACCENT = '#0078D7';\r\nconst DEFAULT_THEME  = 'light';\r\n\r\nfunction propsEqual(x, y) {\r\n  const keys = Object.keys(x);\r\n\r\n  return (\r\n    arrayEqual(keys, Object.keys(y))\r\n    && keys.every(key, x[key] === y[key])\r\n  );\r\n}\r\n\r\nexport default function withPalette(propsFactory) {\r\n  return WrappedComponent => {\r\n    const WithPalette = class extends React.Component {\r\n      constructor(props, context) {\r\n        super(props, context);\r\n\r\n        const contextValue = context.palette && context.palette.getValue();\r\n\r\n        this.createAndMemoizePalette = memoize(createPalette);\r\n        this.state = this.createState({}, props, contextValue, true);\r\n      }\r\n\r\n      componentWillMount() {\r\n        this.subscribePalette(this.context);\r\n      }\r\n\r\n      componentWillReceiveProps(nextProps, nextContext) {\r\n        let shouldUpdate;\r\n\r\n        if (nextContext.palette !== this.context.palette) {\r\n          this.subscribePalette(nextContext);\r\n          shouldUpdate = 1;\r\n        }\r\n\r\n        // React may fire componentWillReceiveProps more than it should\r\n        // https://github.com/facebook/react/issues/3610\r\n        if (!mapEqual(nextProps, this.props)) {\r\n          shouldUpdate = 1;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n          const { palette }  = nextContext || {};\r\n          const contextValue = palette && palette.getValue();\r\n\r\n          this.setState(state => this.createState(state, nextProps, contextValue, true));\r\n        }\r\n      }\r\n\r\n      componentWillUnmount() {\r\n        this.subscribePalette();\r\n      }\r\n\r\n      subscribePalette(context) {\r\n        this.unsubscribe && this.unsubscribe();\r\n\r\n        const { palette } = context || {};\r\n\r\n        this.unsubscribe = palette && palette.subscribe(contextValue => {\r\n          this.setState(state => this.createState(state, this.props, contextValue));\r\n        });\r\n      }\r\n\r\n      getHoistedProps(props, contextValue = {}) {\r\n        const accent = props.accent || contextValue.accent || DEFAULT_ACCENT;\r\n        const theme  = props.theme  || contextValue.theme  || DEFAULT_THEME;\r\n\r\n        return {\r\n          ...mapExcept(contextValue, ['palette']),\r\n          accent,\r\n          theme\r\n        };\r\n      }\r\n\r\n      createState(state, props, contextValue = {}, propsChanged = false) {\r\n        const nextHoistedProps  = this.getHoistedProps(props, contextValue);\r\n        const { accent, theme } = nextHoistedProps;\r\n        const palette           = accent === contextValue.accent && theme === contextValue.theme ? contextValue.palette : this.createAndMemoizePalette(accent, theme);\r\n\r\n        if (propsChanged || !mapEqual(nextHoistedProps, state.hoistedProps)) {\r\n          return {\r\n            cssProps: propsFactory && propsFactory(\r\n              {\r\n                ...nextHoistedProps,\r\n                palette\r\n              },\r\n              props\r\n            ),\r\n            hoistedProps: nextHoistedProps\r\n          };\r\n        }\r\n      }\r\n\r\n      render() {\r\n        return (\r\n          <WrappedComponent\r\n            { ...this.state.cssProps }\r\n            { ...this.props }\r\n          />\r\n        );\r\n      }\r\n    };\r\n\r\n    WithPalette.contextTypes = {\r\n      palette: PropTypes.instanceOf(Subject)\r\n    };\r\n\r\n    WithPalette.displayName = `withPalette(${ WrappedComponent.displayName || WrappedComponent.name })`;\r\n    WithPalette.propTypes = {\r\n      accent: PropTypes.string,\r\n      theme : PropTypes.oneOf(['dark', 'light'])\r\n    };\r\n\r\n    return WithPalette;\r\n  };\r\n}\r\n"]}