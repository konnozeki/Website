'use strict';

var _arrayEqual = require('./arrayEqual');

var _arrayEqual2 = _interopRequireDefault(_arrayEqual);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

test('should return true for similar array', function () {
  expect((0, _arrayEqual2.default)([1], [1])).toBe(true);
});

test('should return true for same array', function () {
  var array = [1];

  expect((0, _arrayEqual2.default)(array, array)).toBe(true);
});

test('should return true for both null array', function () {
  expect((0, _arrayEqual2.default)(null, null)).toBe(true);
});

test('should return true for both empty array', function () {
  expect((0, _arrayEqual2.default)([], [])).toBe(true);
});

test('should return false for array with different content', function () {
  expect((0, _arrayEqual2.default)([1], [2])).toBe(false);
});

test('should return false for array with larger first array', function () {
  expect((0, _arrayEqual2.default)([1], [1, 2])).toBe(false);
});

test('should return false for array with larger second array', function () {
  expect((0, _arrayEqual2.default)([1, 2], [1])).toBe(false);
});

test('should return false for first null array', function () {
  expect((0, _arrayEqual2.default)(null, [1])).toBe(false);
});

test('should return false for second null array', function () {
  expect((0, _arrayEqual2.default)(null, [1])).toBe(false);
});
//# sourceMappingURL=arrayEqual.test.js.map