{"version":3,"sources":["../src/PaletteProvider.js"],"names":["Provider","props","context","createAndMemoizePalette","state","palette","createSubjectValue","nextProps","next","accent","theme","children","Component","propTypes","string","oneOf","childContextTypes","instanceOf","paletteProps","ownProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;IAEMA,Q;;;AACJ,oBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,oHACpBD,KADoB,EACbC,OADa;;AAG1B,UAAKC,uBAAL,GAA+B,+CAA/B;;AAEA,UAAKC,KAAL,GAAa;AACXC,eAAS,sBAAY,MAAKC,kBAAL,CAAwBL,KAAxB,CAAZ;AADE,KAAb;AAL0B;AAQ3B;;;;8CAEyBM,S,EAAW;AACnC,WAAKH,KAAL,CAAWC,OAAX,CAAmBG,IAAnB,CAAwB,KAAKF,kBAAL,CAAwBC,SAAxB,CAAxB;AACD;;;uCAEkBN,K,EAAO;AACxB;AACEI,iBAAS,KAAKF,uBAAL,CAA6BF,MAAMQ,MAAnC,EAA2CR,MAAMS,KAAjD;AADX,SAEK,yBAAUT,KAAV,EAAiB,CAAC,UAAD,CAAjB,CAFL;AAID;;;sCAEiB;AAChB,aAAO,KAAKG,KAAZ;AACD;;;6BAEQ;AACP,aAAO,KAAKH,KAAL,CAAWU,QAAlB;AACD;;;;EA5BoB,gBAAMC,S;;AA+B7BZ,SAASa,SAAT,GAAqB;AACnBJ,UAAQ,oBAAUK,MADC;AAEnBJ,SAAQ,oBAAUK,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB;AAFW,CAArB;;AAKAf,SAASgB,iBAAT,GAA6B;AAC3BX,WAAS,oBAAUY,UAAV;AADkB,CAA7B;;kBAIe,2BAAY,UAACC,YAAD,EAAeC,QAAf;AAAA,sBACtBD,YADsB,EAEtBC,QAFsB;AAAA,CAAZ,EAGXnB,QAHW,C","file":"PaletteProvider.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React     from 'react';\r\n\r\nimport createPalette from './createPalette';\r\nimport mapExcept     from './mapExcept';\r\nimport memoize       from './memoize';\r\nimport Subject       from './Subject';\r\nimport withPalette   from './withPalette';\r\n\r\n// Based on https://docs.microsoft.com/en-us/windows/uwp/style/color#color-palette-building-blocks\r\n\r\nclass Provider extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.createAndMemoizePalette = memoize(createPalette);\r\n\r\n    this.state = {\r\n      palette: new Subject(this.createSubjectValue(props))\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.state.palette.next(this.createSubjectValue(nextProps));\r\n  }\r\n\r\n  createSubjectValue(props) {\r\n    return {\r\n      palette: this.createAndMemoizePalette(props.accent, props.theme),\r\n      ...mapExcept(props, ['children'])\r\n    };\r\n  }\r\n\r\n  getChildContext() {\r\n    return this.state;\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nProvider.propTypes = {\r\n  accent: PropTypes.string,\r\n  theme : PropTypes.oneOf(['dark', 'light'])\r\n};\r\n\r\nProvider.childContextTypes = {\r\n  palette: PropTypes.instanceOf(Subject)\r\n};\r\n\r\nexport default withPalette((paletteProps, ownProps) => ({\r\n  ...paletteProps,\r\n  ...ownProps\r\n}))(Provider)\r\n"]}