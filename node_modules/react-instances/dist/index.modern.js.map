{"version":3,"file":"index.modern.js","sources":["../src/hocs/symbols.js","../src/hocs/manageInstances.js","../src/utils.js","../src/hocs/observable.js","../src/hocs/withInstanceManage.js","../src/hooks/useObserver.js","../src/hooks/useObserversNotify.js","../src/hooks/withHookInstanceManage.js","../src/hooks/withHookObserversNotify.js","../src/hooks/withHookManage.js","../src/hooks/useInstanceManage.js"],"sourcesContent":["export default {\n  INSTANCES: Symbol('instances'),\n  OBSERVERS: Symbol('observers')\n}\n","import SYMBOLS from './symbols'\n\nexport default function manageInstances(Component) {\n  Component[SYMBOLS.INSTANCES] = new Map()\n\n  Component.getInstances = () => Component[SYMBOLS.INSTANCES]\n\n  Component.hasInstance = (key) =>\n    Component.getInstances().has(key) && Component.getInstances().get(key)\n\n  Component.getInstance = (key) => Component.getInstances().get(key)\n\n  Component.addInstance = (key, instance) =>\n    Component.getInstances().set(key, instance)\n\n  Component.removeInstance = (key) => Component.getInstances().delete(key)\n\n  return Component\n}\n","import { get, set, transform, isObject } from 'lodash'\nimport { useObserver } from '.'\n\nexport function deepDiff(current, previous, path = []) {\n  if (typeof current !== typeof previous) {\n    return current\n  }\n\n  return transform(\n    current,\n    function iteratee(result, value, key) {\n      if (!useObserver.isEqual(value, get(previous, key), path)) {\n        set(\n          result,\n          key,\n          isObject(value) && isObject(get(previous, key))\n            ? deepDiff(value, get(previous, key), path.concat(key))\n            : value\n        )\n      }\n    },\n    {}\n  )\n}\n\nexport function uuidv4() {\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n    (\n      c ^\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n    ).toString(16)\n  )\n}\n","import { uuidv4 } from '../utils'\nimport SYMBOLS from './symbols'\n\nexport default function observable(Component) {\n  Component[SYMBOLS.OBSERVERS] = new Map()\n\n  Component.getObservers = () => Component[SYMBOLS.OBSERVERS]\n\n  Component.hasObserver = (key) => Component.getObservers().has(key)\n  Component.getObserver = (key) =>\n    Component.hasObserver(key) ? Component.getObservers().get(key) : new Map()\n\n  Component.addObserver = (key, watcher) => {\n    if (!Component.hasObserver(key)) {\n      Component.getObservers().set(key, new Map())\n    }\n\n    const uuid = uuidv4()\n    Component.getObserver(key).set(uuid, watcher)\n\n    return uuid\n  }\n\n  Component.notifyObservers = (name, diff, ...data) => {\n    const values = data.length > 1 ? Object.assign({}, ...data) : data[0]\n    Component.getObserver(name).forEach((watcher) => watcher(diff, values))\n  }\n\n  Component.removeObserver = (key, id) => {\n    if (Component.hasObserver(key)) {\n      Component.getObserver(key).delete(id)\n    }\n  }\n\n  return Component\n}\n","import manageInstances from './manageInstances'\n\nexport default function withInstanceManage(Component, keyAttribute = 'name') {\n  class WrappedComponent extends Component {\n    constructor(props) {\n      super(props)\n      WrappedComponent.addInstance(this.props[keyAttribute], this)\n    }\n\n    componentWillUnmount() {\n      WrappedComponent.removeInstance(this.props[keyAttribute])\n    }\n  }\n\n  return manageInstances(WrappedComponent)\n}\n","import { useState, useEffect } from 'react'\nimport { pick, get, has, isEqual } from 'lodash'\n\nfunction useObserver(observable, name, fields, initialValue) {\n  const [previousValues, setPreviousValues] = useState(initialValue)\n\n  useEffect(() => {\n    const id = observable.addObserver(\n      name,\n      function observer(diff, currentValues) {\n        if (fields) {\n          const isSingleField = typeof fields === 'string'\n          const isChanged = isSingleField\n            ? has(diff, fields)\n            : fields.some((field) => has(diff, field))\n          if (isChanged) {\n            setPreviousValues(\n              (isSingleField ? get : pick)(currentValues, fields)\n            )\n          }\n        } else {\n          if (!useObserver.isEqual(currentValues, previousValues)) {\n            setPreviousValues(currentValues)\n          }\n        }\n      }\n    )\n\n    return () => {\n      observable.removeObserver(name, id)\n    }\n  }, [])\n\n  return previousValues\n}\n\nuseObserver.isEqual = isEqual\n\nexport function setEqual(fn) {\n  useObserver.isEqual = fn\n}\n\nexport default useObserver\n","import { isEmpty } from 'lodash'\nimport { useEffect, useRef } from 'react'\nimport { deepDiff } from '../utils'\n\nexport default function useObserversNotify(Component, name, ...data) {\n  const ref = useRef()\n\n  useEffect(() => {\n    const values = data.length > 1 ? Object.assign({}, ...data) : data[0]\n    const diff = deepDiff(values, ref.current)\n    if (!isEmpty(diff)) {\n      Component.notifyObservers(name, diff, ...data)\n    }\n    ref.current = values\n  }, [...data])\n}\n","import { manageInstances, useInstanceManage } from '..'\n\nexport default function withHookInstanceManage(hook) {\n  const managedHook = manageInstances(hook)\n\n  return new Proxy(managedHook, {\n    get: Reflect.get,\n    set: Reflect.set,\n    apply(target, thisArgument, [name, ...args]) {\n      const result = Reflect.apply(target, thisArgument, args)\n\n      useInstanceManage(managedHook, name, result)\n\n      return result\n    }\n  })\n}\n","import { observable, useObserversNotify } from '..'\n\nexport default function withHookObserversNotify(hook) {\n  observable(hook)\n\n  return new Proxy(hook, {\n    get: Reflect.get,\n    set: Reflect.set,\n    apply(target, thisArgument, [name, ...args]) {\n      const result = Reflect.apply(target, thisArgument, args)\n\n      useObserversNotify(hook, name, result)\n\n      return result\n    }\n  })\n}\n","import {\n  manageInstances,\n  observable,\n  useInstanceManage,\n  useObserversNotify\n} from '..'\n\nexport default function withHookManage(hook) {\n  manageInstances(hook)\n  observable(hook)\n\n  return new Proxy(hook, {\n    get: Reflect.get,\n    set: Reflect.set,\n    apply(target, thisArgument, [name, ...args]) {\n      const result = Reflect.apply(target, thisArgument, args)\n\n      useInstanceManage(hook, name, result)\n      useObserversNotify(hook, name, result)\n\n      return result\n    }\n  })\n}\n","import { useEffect } from 'react'\n\nexport default function useInstanceManage(Component, name, ...data) {\n  Component.addInstance(\n    name,\n    data.length > 1 ? Object.assign({}, ...data) : data[0]\n  )\n\n  useEffect(\n    () => () => {\n      Component.removeInstance(name)\n    },\n    []\n  )\n}\n"],"names":["INSTANCES","Symbol","OBSERVERS","manageInstances","Component","SYMBOLS","Map","getInstances","hasInstance","key","has","get","getInstance","addInstance","instance","set","removeInstance","deepDiff","current","previous","path","transform","result","value","useObserver","isEqual","isObject","concat","observable","getObservers","hasObserver","getObserver","addObserver","watcher","uuid","replace","c","crypto","getRandomValues","Uint8Array","toString","notifyObservers","name","diff","data","values","length","Object","assign","forEach","removeObserver","id","withInstanceManage","keyAttribute","props","_this","WrappedComponent","componentWillUnmount","this","fields","initialValue","useState","previousValues","setPreviousValues","useEffect","currentValues","isSingleField","some","field","pick","setEqual","fn","useObserversNotify","ref","useRef","isEmpty","withHookInstanceManage","hook","managedHook","Proxy","Reflect","apply","target","thisArgument","args","useInstanceManage","withHookObserversNotify","withHookManage"],"mappings":"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"}